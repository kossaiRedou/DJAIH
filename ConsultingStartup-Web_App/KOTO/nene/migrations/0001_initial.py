# Generated by Django 5.1.6 on 2025-03-08 23:45

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('year', models.CharField(max_length=4)),
                ('history_title', models.CharField(max_length=255)),
                ('history_text', models.TextField()),
                ('mission', models.TextField(default=None)),
                ('image', models.ImageField(blank=True, null=True, upload_to='about_images/')),
                ('video_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Titre')),
                ('slug', models.SlugField(blank=True, verbose_name='Slug')),
                ('author', models.CharField(max_length=100, verbose_name='Auteur')),
                ('category', models.CharField(max_length=100, verbose_name='Catégorie')),
                ('content', models.TextField(verbose_name='Contenu (Markdown)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='articles/', verbose_name='Image')),
                ('published_date', models.DateField(auto_now_add=True, verbose_name='Date de publication')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('subject', models.CharField(max_length=200, verbose_name='Sujet')),
                ('message', models.TextField(verbose_name='Message')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('gitHub', models.URLField(blank=True, null=True)),
                ('medium', models.URLField(blank=True, null=True)),
                ('position', models.CharField(max_length=150)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('location', models.CharField(max_length=100)),
                ('about', models.TextField(max_length=1200)),
                ('cv', models.FileField(blank=True, null=True, upload_to='KOTO/media/cvs')),
            ],
        ),
        migrations.CreateModel(
            name='Practice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(unique=True, verbose_name='Numéro')),
                ('title', models.CharField(max_length=255, verbose_name='Titre')),
                ('description', models.TextField(verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Pratique',
                'verbose_name_plural': 'Nos Pratiques',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Titre du service')),
                ('slug', models.SlugField(blank=True, editable=False, null=True, unique=True)),
                ('short_description', models.CharField(help_text='Une phrase percutante qui résume le service.', max_length=255, null=True, verbose_name='Description courte')),
                ('detailed_description', models.TextField(help_text='Explique en quoi ce service est utile et ses avantages.', null=True, verbose_name='Description complète')),
                ('benefits', models.TextField(help_text='Liste des bénéfices concrets, séparés par des virgules.', null=True, verbose_name='Avantages clés')),
                ('target_clients', models.CharField(help_text='Ex: Startups, PME, Grandes entreprises, Freelancers...', max_length=255, null=True, verbose_name='Public cible')),
                ('image', models.ImageField(blank=True, upload_to='services/', verbose_name='Image illustrant le service')),
                ('call_to_action', models.CharField(blank=True, help_text='Ex: Contactez-nous pour une consultation gratuite', max_length=255, null=True, verbose_name="Texte d'appel à l'action")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SoftSkills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(blank=True, max_length=100, null=True)),
                ('specialty', models.CharField(max_length=100)),
                ('university', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(max_length=500)),
                ('country', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to='nene.employee')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('platform', models.CharField(max_length=100)),
                ('link', models.URLField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='certifications/')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='nene.employee')),
                ('skills', models.ManyToManyField(related_name='certifications', to='nene.skill')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='softSkills',
            field=models.ManyToManyField(related_name='employees', to='nene.softskills'),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='projects/')),
                ('demo', models.URLField(blank=True, null=True)),
                ('depot', models.URLField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='nene.employee')),
                ('technologies', models.ManyToManyField(related_name='projects', to='nene.technology')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=100)),
                ('company', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('description', models.TextField(max_length=1200)),
                ('city', models.CharField(max_length=100)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='nene.employee')),
                ('technologies', models.ManyToManyField(related_name='experiences', to='nene.technology')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
    ]
